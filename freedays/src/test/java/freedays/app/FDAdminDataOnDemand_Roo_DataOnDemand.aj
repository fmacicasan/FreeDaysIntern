// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package freedays.app;

import freedays.app.FDAdmin;
import java.util.List;
import java.util.Random;
import org.springframework.stereotype.Component;

privileged aspect FDAdminDataOnDemand_Roo_DataOnDemand {
    
    declare @type: FDAdminDataOnDemand: @Component;
    
    private Random FDAdminDataOnDemand.rnd = new java.security.SecureRandom();
    
    private List<FDAdmin> FDAdminDataOnDemand.data;
    
    public FDAdmin FDAdminDataOnDemand.getNewTransientFDAdmin(int index) {
        freedays.app.FDAdmin obj = new freedays.app.FDAdmin();
        setAppRegUser(obj, index);
        return obj;
    }
    
    public void FDAdminDataOnDemand.setAppRegUser(FDAdmin obj, int index) {
        freedays.domain.ApplicationRegularUser appRegUser = null;
        obj.setAppRegUser(appRegUser);
    }
    
    public FDAdmin FDAdminDataOnDemand.getSpecificFDAdmin(int index) {
        init();
        if (index < 0) index = 0;
        if (index > (data.size() - 1)) index = data.size() - 1;
        FDAdmin obj = data.get(index);
        return FDAdmin.findFDAdmin(obj.getId());
    }
    
    public FDAdmin FDAdminDataOnDemand.getRandomFDAdmin() {
        init();
        FDAdmin obj = data.get(rnd.nextInt(data.size()));
        return FDAdmin.findFDAdmin(obj.getId());
    }
    
    public boolean FDAdminDataOnDemand.modifyFDAdmin(FDAdmin obj) {
        return false;
    }
    
    public void FDAdminDataOnDemand.init() {
        data = freedays.app.FDAdmin.findFDAdminEntries(0, 10);
        if (data == null) throw new IllegalStateException("Find entries implementation for 'FDAdmin' illegally returned null");
        if (!data.isEmpty()) {
            return;
        }
        
        data = new java.util.ArrayList<freedays.app.FDAdmin>();
        for (int i = 0; i < 10; i++) {
            freedays.app.FDAdmin obj = getNewTransientFDAdmin(i);
            obj.persist();
            obj.flush();
            data.add(obj);
        }
    }
    
}
