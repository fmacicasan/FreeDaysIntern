TODO in STS -
	- permit approval/deny only if the request is : cancelable freeday, not approved/denied/canceled
	- add a choice probability for the characters at password generation
	- @reportfreedays controller get jst the active users
	- @find all pending approvals by username, search only the ones thatneed approval
	- @check weekend validation util verify only with !businessday
	- report all users or just active ones?
	- get vacations only between the two provided dates
	- change all catch clauses @ throw exception, catch only when is needed
	- !!! disabled gmail accout

TODO:
	- add Service layer instead of static method calls
	- put security annotations on the services instead of the controllers
	
	- on update should also check the validity of the RegularUser
	- update a request by the FDUser???
	- what if not approved and the date already passed ??
	- visitor for permissions instead of instanceof
	
	- change register/recoverpass/change pass/
	- DONE improve validity restricting request to one for a calendar date
		- verify also if vacation intersects some day already approved!
	- request more than one day / request
	- solve the @BusinessDay and stuff error display
	
	- add page for FDUser visualization of a registered user
	- restrict the login untill a FDADMIN/HRMANAGER associated the FDUser to the RegularUser
	- change the register/change pass/ change info/ login process and password encryption