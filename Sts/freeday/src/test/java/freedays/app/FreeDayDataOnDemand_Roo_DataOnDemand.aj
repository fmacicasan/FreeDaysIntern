// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package freedays.app;

import freedays.app.FreeDay;
import java.util.List;
import java.util.Random;
import org.springframework.stereotype.Component;

privileged aspect FreeDayDataOnDemand_Roo_DataOnDemand {
    
    declare @type: FreeDayDataOnDemand: @Component;
    
    private Random FreeDayDataOnDemand.rnd = new java.security.SecureRandom();
    
    private List<FreeDay> FreeDayDataOnDemand.data;
    
    public FreeDay FreeDayDataOnDemand.getNewTransientFreeDay(int index) {
        freedays.app.FreeDay obj = new freedays.app.FreeDay();
        setRequestdate(obj, index);
        setApproval(obj, index);
        return obj;
    }
    
    public void FreeDayDataOnDemand.setRequestdate(FreeDay obj, int index) {
        java.util.Calendar requestdate = new java.util.GregorianCalendar(java.util.Calendar.getInstance().get(java.util.Calendar.YEAR), java.util.Calendar.getInstance().get(java.util.Calendar.MONTH), java.util.Calendar.getInstance().get(java.util.Calendar.DAY_OF_MONTH) + 1);
        obj.setRequestdate(requestdate);
    }
    
    public void FreeDayDataOnDemand.setApproval(FreeDay obj, int index) {
        freedays.domain.ApprovalStrategy approval = null;
        obj.setApproval(approval);
    }
    
    public FreeDay FreeDayDataOnDemand.getSpecificFreeDay(int index) {
        init();
        if (index < 0) index = 0;
        if (index > (data.size() - 1)) index = data.size() - 1;
        FreeDay obj = data.get(index);
        return FreeDay.findFreeDay(obj.getId());
    }
    
    public FreeDay FreeDayDataOnDemand.getRandomFreeDay() {
        init();
        FreeDay obj = data.get(rnd.nextInt(data.size()));
        return FreeDay.findFreeDay(obj.getId());
    }
    
    public boolean FreeDayDataOnDemand.modifyFreeDay(FreeDay obj) {
        return false;
    }
    
    public void FreeDayDataOnDemand.init() {
        data = freedays.app.FreeDay.findFreeDayEntries(0, 10);
        if (data == null) throw new IllegalStateException("Find entries implementation for 'FreeDay' illegally returned null");
        if (!data.isEmpty()) {
            return;
        }
        
        data = new java.util.ArrayList<freedays.app.FreeDay>();
        for (int i = 0; i < 10; i++) {
            freedays.app.FreeDay obj = getNewTransientFreeDay(i);
            obj.persist();
            obj.flush();
            data.add(obj);
        }
    }
    
}
