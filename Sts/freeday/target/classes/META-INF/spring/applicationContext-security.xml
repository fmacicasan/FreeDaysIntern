<?xml version="1.0" encoding="UTF-8"?>

<beans:beans xmlns="http://www.springframework.org/schema/security"
    xmlns:beans="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-3.0.xsd">

<!-- HTTP security configurations -->
    <http auto-config="true" use-expressions="true">
     <form-login login-processing-url="/resources/j_spring_security_check" login-page="/login" authentication-failure-url="/login?login_error=t"/>
        <logout logout-url="/resources/j_spring_security_logout"/>
        
        <!-- Configure these elements to secure URIs in your application -->
        <intercept-url pattern="/regularusers" access="permitAll" />
        <intercept-url pattern="/admins/**" access="hasRole('ROLE_ADMIN')"/>
        <intercept-url pattern="/regularusers/**" access="permitAll" />
        <intercept-url pattern="/login/**" access="permitAll" />
        <intercept-url pattern="/**" access="permitAll" />
    </http>

<beans:bean name="AuthenticationController"
class="freedays.controller.AuthentificationController">
</beans:bean>
<!-- Configure Authentication mechanism -->
    <authentication-manager alias="authenticationManager">
     <authentication-provider ref="AuthenticationController">
     <password-encoder hash="sha-256"/>
     <jdbc-user-service data-source-ref="dataSource" authorities-by-username-query="select u.username, app.roles from RegularUser u, ApplicationRegularUser app, FDUser fd where u.id = fd.id and app.id = fd.application_regular_user and u.id = ?" users-by-username-query="select username,password from RegularUser where username = ?"/>
     </authentication-provider>
</authentication-manager>

</beans:beans>